{"version":3,"sources":["components/PostsList/PostsList.jsx","components/NewCommentForm/NewCommentForm.jsx","components/Loader/Loader.jsx","components/Comment/Comment.jsx","components/PostDetails/PostDetails.jsx","api/api.js","api/posts.js","api/comments.js","api/users.js","App.jsx","index.js"],"names":["PostsList","posts","onSelect","useState","selectedPost","setSelectedPost","className","map","post","userId","title","id","key","type","onClick","postId","showDetails","NewCommentForm","createComment","nameOfAuthor","setName","emailOfAuthor","setEmail","bodyOfComment","setBodyOfComment","onSubmit","e","preventDefault","value","onChange","target","handleChangeName","name","placeholder","handleChangeEmail","handleChangeBody","Loader","Comment","comment","onDeleteComment","commentItem","setCommentItem","console","log","useEffect","body","PostDetails","comments","loader","onLoadComments","onAddComment","isHideComments","setIsHideComments","updateComments","current","length","request","url","options","a","fetch","response","ok","Error","status","statusText","json","getPosts","getPost","getComments","removeComment","commentId","method","addComment","data","JSON","stringify","getUsers","App","setPosts","users","setUsers","setPost","IsRenderPost","setIsRenderPost","setComments","loaderComments","setLoaderComments","loaderPosts","setLoaderPosts","setValue","loadUsers","loadPosts","selectPost","deleteComment","email","newComment","loadComments","commentsFromServer","filter","usersFromServer","postsFromServer","postFromServer","user","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.10f2b728.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './PostsList.scss';\n\nexport const PostsList = ({ posts, onSelect }) => {\n  const [selectedPost, setSelectedPost] = useState(0);\n\n  const showDetails = (postId) => {\n    if (selectedPost === postId) {\n      onSelect(0);\n      setSelectedPost('');\n\n      return;\n    }\n\n    setSelectedPost(postId);\n    onSelect(postId);\n  };\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts.map((post) => {\n          const { userId, title, id } = post;\n\n          return (\n            <li key={id} className=\"PostsList__item\">\n              <div>\n                <b>{`[User #${userId}]: `}</b>\n                {title}\n              </div>\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => showDetails(id)}\n              >\n                { id === selectedPost ? 'Close' : 'Open' }\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ postId, createComment}) => {\n  const [nameOfAuthor, setName] = useState('');\n  const [emailOfAuthor, setEmail] = useState('');\n  const [bodyOfComment, setBodyOfComment] = useState('');\n\n  const handleChangeName = ({ target }) => {\n    const { value } = target;\n\n    setName(value);\n  };\n\n  const handleChangeEmail = ({ target }) => {\n    const { value } = target;\n\n    setEmail(value);\n  };\n\n  const handleChangeBody = ({ target }) => {\n    const { value } = target;\n\n    setBodyOfComment(value);\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        createComment(nameOfAuthor, emailOfAuthor, bodyOfComment, postId);\n        setName('');\n        setEmail('');\n        setBodyOfComment('');\n      }}\n    >\n      <div className=\"form-field\">\n        <input\n          value={nameOfAuthor}\n          onChange={e => handleChangeName(e)}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          value={emailOfAuthor}\n          onChange={e => handleChangeEmail(e)}\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          value={bodyOfComment}\n          onChange={e => handleChangeBody(e)}\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport './Comment.scss';\n\nexport const Comment = ({ comment, onDeleteComment }) => {\n  const [commentItem, setCommentItem] = useState(comment);\n  console.log(commentItem);\n\n  useEffect(() => {\n    return () => setCommentItem(comment);\n  }, [comment.id]);\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        className=\"PostDetails__remove-button button\"\n        onClick={() => {\n          onDeleteComment(comment.id);\n        }}\n      >\n        X\n      </button>\n      <p>{comment.body}</p>\n\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { NewCommentForm } from '../NewCommentForm';\nimport { Loader } from '../Loader';\nimport { Comment } from '../Comment';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({\n  post,\n  comments,\n  loader,\n  onDeleteComment,\n  onLoadComments,\n  onAddComment,\n}) => {\n  const [isHideComments, setIsHideComments] = useState(false);\n  const { body } = post;\n\n  useEffect(() => {\n    setIsHideComments(false);\n  }, [post.id]);\n\n  useEffect(() => {\n    updateComments();\n  });\n\n  const updateComments = () => {\n    onLoadComments(post.id);\n  };\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n\n      <section className=\"PostDetails__post\">\n        <p>{body}</p>\n      </section>\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => {\n            setIsHideComments(current => !current);\n            updateComments();\n          }}\n        >\n          {`${isHideComments ? 'Show' : 'Hide'} ${comments.length} comments`}\n        </button>\n\n        {/*{loader && <Loader />}*/}\n        {!isHideComments && (\n          <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li key={comment.id} className=\"PostDetails__list-item\">\n                <Comment\n                  comment={comment}\n                  onDeleteComment={onDeleteComment}\n                />\n              </li>\n            ))}\n          </ul>\n        )}\n\n      </section>\n\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm postId={post.id} createComment={onAddComment} />\n        </div>\n      </section>\n    </div>\n  );\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport const request = async(url, options) => {\n  const response = await fetch(`${BASE_URL}${url}`, options);\n\n  if (!response.ok) {\n    throw new Error(`${response.status} - ${response.statusText}`);\n  }\n\n  return response.json();\n};\n","import { request } from './api';\n\nexport const getPosts = async() => request('/posts');\n\nexport const getPost = async postId => request(`/posts/${postId}`);\n","import { request } from './api';\n\nexport const getComments = async() => request(`/comments`);\n\nexport const removeComment = async commentId => (\n  request(`/comments/${commentId}`, { method: 'DELETE' })\n);\n\nexport const addComment = async data => (\n  request(`/comments`, {\n    method: 'POST',\n    body: JSON.stringify(data),\n  })\n);\n","import { request } from './api';\n\nexport const getUsers = async() => request('/users');\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { Loader } from './components/Loader';\nimport { getPosts, getPost } from './api/posts';\nimport { getComments, removeComment, addComment } from './api/comments';\nimport { getUsers } from './api/users';\n\nconst App = () => {\n  const [posts, setPosts] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [post, setPost] = useState(0);\n  const [IsRenderPost, setIsRenderPost] = useState(false);\n  const [comments, setComments] = useState([]);\n  const [loaderComments, setLoaderComments] = useState(false);\n  const [loaderPosts, setLoaderPosts] = useState(false);\n  const [value, setValue] = useState(0);\n\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  useEffect(() => {\n    loadPosts();\n  }, [value]);\n\n  useEffect(() => {\n    selectPost();\n  }, []);\n\n  const deleteComment = async(commentId) => {\n    await removeComment(commentId);\n  };\n\n  const createComment = async(name, email, bodyOfComment, id) => {\n    const newComment = {\n      name,\n      email,\n      body: bodyOfComment,\n      postId: id,\n    };\n\n    await addComment(newComment);\n  };\n\n  const loadComments = async(postId) => {\n    setLoaderComments(true);\n    const commentsFromServer = await getComments();\n\n    setComments([...commentsFromServer.data].filter(\n      comment => comment.postId === postId,\n    ));\n\n    setLoaderComments(false);\n  };\n\n  const loadUsers = async() => {\n    setLoaderPosts(true);\n    const usersFromServer = await getUsers();\n\n    setLoaderPosts(false);\n    setUsers(usersFromServer.data);\n  };\n\n  const loadPosts = async() => {\n    const postsFromServer = await getPosts();\n\n    setPosts(value === 0\n      ? postsFromServer.data\n      : [...postsFromServer.data]\n        .filter(\n          post => post.userId === value,\n        ));\n  };\n\n  const selectPost = async(postId) => {\n    if (postId === 0) {\n      setIsRenderPost(false);\n\n      return;\n    }\n\n    const postFromServer = await getPost(postId);\n\n    setIsRenderPost(true);\n    setPost(postFromServer.data);\n  };\n\n  return (\n\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            value={value}\n            onChange={({ target }) => setValue(+target.value)}\n            className=\"App__user-selector\"\n          >\n            <option value=\"0\">All users</option>\n            {users.map(user => (\n              <option value={user.id} key={user.id}>{user.name}</option>\n            ))}\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          {!posts.length && !loaderPosts\n            ? <div className=\"PostsList__item\">No posts yet</div>\n            : <PostsList posts={posts} onSelect={selectPost} />\n          }\n          { loaderPosts && <Loader />}\n        </div>\n\n        {IsRenderPost && post && (\n          <div className=\"App__content\">\n            <PostDetails\n              post={post}\n              comments={comments}\n              onLoadComments={loadComments}\n              loader={loaderComments}\n              onDeleteComment={deleteComment}\n              onAddComment={createComment}\n            />\n          </div>\n        )}\n\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}